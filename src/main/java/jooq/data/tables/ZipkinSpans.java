/**
 * This class is generated by jOOQ
 */
package jooq.data.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.data.CloudinsApm;
import jooq.data.Keys;
import jooq.data.tables.records.ZipkinSpansRecord;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ZipkinSpans extends TableImpl<ZipkinSpansRecord> {

    private static final long serialVersionUID = 1968077317;

    /**
     * The reference instance of <code>cloudins_apm.zipkin_spans</code>
     */
    public static final ZipkinSpans ZIPKIN_SPANS = new ZipkinSpans();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ZipkinSpansRecord> getRecordType() {
        return ZipkinSpansRecord.class;
    }

    /**
     * The column <code>cloudins_apm.zipkin_spans.trace_id</code>.
     */
    public final TableField<ZipkinSpansRecord, Long> TRACE_ID = createField("trace_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>cloudins_apm.zipkin_spans.id</code>.
     */
    public final TableField<ZipkinSpansRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>cloudins_apm.zipkin_spans.name</code>.
     */
    public final TableField<ZipkinSpansRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>cloudins_apm.zipkin_spans.parent_id</code>.
     */
    public final TableField<ZipkinSpansRecord, Long> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>cloudins_apm.zipkin_spans.debug</code>.
     */
    public final TableField<ZipkinSpansRecord, Boolean> DEBUG = createField("debug", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>cloudins_apm.zipkin_spans.start_ts</code>. Span.timestamp(): epoch micros used for endTs query and to implement TTL
     */
    public final TableField<ZipkinSpansRecord, Long> START_TS = createField("start_ts", org.jooq.impl.SQLDataType.BIGINT, this, "Span.timestamp(): epoch micros used for endTs query and to implement TTL");

    /**
     * The column <code>cloudins_apm.zipkin_spans.record_ts</code>.
     */
    public final TableField<ZipkinSpansRecord, Long> RECORD_TS = createField("record_ts", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>cloudins_apm.zipkin_spans.duration</code>. Span.duration(): micros used for minDuration and maxDuration query
     */
    public final TableField<ZipkinSpansRecord, Long> DURATION = createField("duration", org.jooq.impl.SQLDataType.BIGINT, this, "Span.duration(): micros used for minDuration and maxDuration query");

    /**
     * Create a <code>cloudins_apm.zipkin_spans</code> table reference
     */
    public ZipkinSpans() {
        this("zipkin_spans", null);
    }

    /**
     * Create an aliased <code>cloudins_apm.zipkin_spans</code> table reference
     */
    public ZipkinSpans(String alias) {
        this(alias, ZIPKIN_SPANS);
    }

    private ZipkinSpans(String alias, Table<ZipkinSpansRecord> aliased) {
        this(alias, aliased, null);
    }

    private ZipkinSpans(String alias, Table<ZipkinSpansRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CloudinsApm.CLOUDINS_APM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ZipkinSpansRecord>> getKeys() {
        return Arrays.<UniqueKey<ZipkinSpansRecord>>asList(Keys.KEY_ZIPKIN_SPANS_TRACE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ZipkinSpans as(String alias) {
        return new ZipkinSpans(alias, this);
    }

    /**
     * Rename this table
     */
    public ZipkinSpans rename(String name) {
        return new ZipkinSpans(name, null);
    }
}
