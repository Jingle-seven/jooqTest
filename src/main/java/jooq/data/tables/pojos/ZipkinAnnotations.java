/**
 * This class is generated by jOOQ
 */
package jooq.data.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ZipkinAnnotations implements Serializable {

    private static final long serialVersionUID = 563107425;

    private Long    traceId;
    private Long    spanId;
    private String  aKey;
    private byte[]  aValue;
    private Integer aType;
    private Long    aTimestamp;
    private Integer endpointIpv4;
    private byte[]  endpointIpv6;
    private Short   endpointPort;
    private String  endpointServiceName;

    public ZipkinAnnotations() {}

    public ZipkinAnnotations(ZipkinAnnotations value) {
        this.traceId = value.traceId;
        this.spanId = value.spanId;
        this.aKey = value.aKey;
        this.aValue = value.aValue;
        this.aType = value.aType;
        this.aTimestamp = value.aTimestamp;
        this.endpointIpv4 = value.endpointIpv4;
        this.endpointIpv6 = value.endpointIpv6;
        this.endpointPort = value.endpointPort;
        this.endpointServiceName = value.endpointServiceName;
    }

    public ZipkinAnnotations(
        Long    traceId,
        Long    spanId,
        String  aKey,
        byte[]  aValue,
        Integer aType,
        Long    aTimestamp,
        Integer endpointIpv4,
        byte[]  endpointIpv6,
        Short   endpointPort,
        String  endpointServiceName
    ) {
        this.traceId = traceId;
        this.spanId = spanId;
        this.aKey = aKey;
        this.aValue = aValue;
        this.aType = aType;
        this.aTimestamp = aTimestamp;
        this.endpointIpv4 = endpointIpv4;
        this.endpointIpv6 = endpointIpv6;
        this.endpointPort = endpointPort;
        this.endpointServiceName = endpointServiceName;
    }

    public Long getTraceId() {
        return this.traceId;
    }

    public void setTraceId(Long traceId) {
        this.traceId = traceId;
    }

    public Long getSpanId() {
        return this.spanId;
    }

    public void setSpanId(Long spanId) {
        this.spanId = spanId;
    }

    public String getAKey() {
        return this.aKey;
    }

    public void setAKey(String aKey) {
        this.aKey = aKey;
    }

    public byte[] getAValue() {
        return this.aValue;
    }

    public void setAValue(byte[] aValue) {
        this.aValue = aValue;
    }

    public Integer getAType() {
        return this.aType;
    }

    public void setAType(Integer aType) {
        this.aType = aType;
    }

    public Long getATimestamp() {
        return this.aTimestamp;
    }

    public void setATimestamp(Long aTimestamp) {
        this.aTimestamp = aTimestamp;
    }

    public Integer getEndpointIpv4() {
        return this.endpointIpv4;
    }

    public void setEndpointIpv4(Integer endpointIpv4) {
        this.endpointIpv4 = endpointIpv4;
    }

    public byte[] getEndpointIpv6() {
        return this.endpointIpv6;
    }

    public void setEndpointIpv6(byte[] endpointIpv6) {
        this.endpointIpv6 = endpointIpv6;
    }

    public Short getEndpointPort() {
        return this.endpointPort;
    }

    public void setEndpointPort(Short endpointPort) {
        this.endpointPort = endpointPort;
    }

    public String getEndpointServiceName() {
        return this.endpointServiceName;
    }

    public void setEndpointServiceName(String endpointServiceName) {
        this.endpointServiceName = endpointServiceName;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ZipkinAnnotations (");

        sb.append(traceId);
        sb.append(", ").append(spanId);
        sb.append(", ").append(aKey);
        sb.append(", ").append("[binary...]");
        sb.append(", ").append(aType);
        sb.append(", ").append(aTimestamp);
        sb.append(", ").append(endpointIpv4);
        sb.append(", ").append("[binary...]");
        sb.append(", ").append(endpointPort);
        sb.append(", ").append(endpointServiceName);

        sb.append(")");
        return sb.toString();
    }
}
