/**
 * This class is generated by jOOQ
 */
package jooq.data.tables.records;


import javax.annotation.Generated;

import jooq.data.tables.SpanInfos;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpanInfosRecord extends UpdatableRecordImpl<SpanInfosRecord> implements Record4<String, String, String, String> {

    private static final long serialVersionUID = 1959525986;

    /**
     * Setter for <code>cloudins_apm.span_infos.name</code>.
     */
    public void setName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>cloudins_apm.span_infos.name</code>.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>cloudins_apm.span_infos.alias</code>.
     */
    public void setAlias(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>cloudins_apm.span_infos.alias</code>.
     */
    public String getAlias() {
        return (String) get(1);
    }

    /**
     * Setter for <code>cloudins_apm.span_infos.def_baseline</code>.
     */
    public void setDefBaseline(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>cloudins_apm.span_infos.def_baseline</code>.
     */
    public String getDefBaseline() {
        return (String) get(2);
    }

    /**
     * Setter for <code>cloudins_apm.span_infos.cust_baseline</code>.
     */
    public void setCustBaseline(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>cloudins_apm.span_infos.cust_baseline</code>.
     */
    public String getCustBaseline() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return SpanInfos.SPAN_INFOS.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return SpanInfos.SPAN_INFOS.ALIAS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return SpanInfos.SPAN_INFOS.DEF_BASELINE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return SpanInfos.SPAN_INFOS.CUST_BASELINE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAlias();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDefBaseline();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getCustBaseline();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpanInfosRecord value1(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpanInfosRecord value2(String value) {
        setAlias(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpanInfosRecord value3(String value) {
        setDefBaseline(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpanInfosRecord value4(String value) {
        setCustBaseline(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpanInfosRecord values(String value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SpanInfosRecord
     */
    public SpanInfosRecord() {
        super(SpanInfos.SPAN_INFOS);
    }

    /**
     * Create a detached, initialised SpanInfosRecord
     */
    public SpanInfosRecord(String name, String alias, String defBaseline, String custBaseline) {
        super(SpanInfos.SPAN_INFOS);

        set(0, name);
        set(1, alias);
        set(2, defBaseline);
        set(3, custBaseline);
    }
}
