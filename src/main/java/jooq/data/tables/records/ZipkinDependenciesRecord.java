/**
 * This class is generated by jOOQ
 */
package jooq.data.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import jooq.data.tables.ZipkinDependencies;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ZipkinDependenciesRecord extends TableRecordImpl<ZipkinDependenciesRecord> implements Record4<Date, String, String, Long> {

    private static final long serialVersionUID = 703404603;

    /**
     * Setter for <code>cloudins_apm.zipkin_dependencies.day</code>.
     */
    public void setDay(Date value) {
        set(0, value);
    }

    /**
     * Getter for <code>cloudins_apm.zipkin_dependencies.day</code>.
     */
    public Date getDay() {
        return (Date) get(0);
    }

    /**
     * Setter for <code>cloudins_apm.zipkin_dependencies.parent</code>.
     */
    public void setParent(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>cloudins_apm.zipkin_dependencies.parent</code>.
     */
    public String getParent() {
        return (String) get(1);
    }

    /**
     * Setter for <code>cloudins_apm.zipkin_dependencies.child</code>.
     */
    public void setChild(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>cloudins_apm.zipkin_dependencies.child</code>.
     */
    public String getChild() {
        return (String) get(2);
    }

    /**
     * Setter for <code>cloudins_apm.zipkin_dependencies.call_count</code>.
     */
    public void setCallCount(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>cloudins_apm.zipkin_dependencies.call_count</code>.
     */
    public Long getCallCount() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Date, String, String, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Date, String, String, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field1() {
        return ZipkinDependencies.ZIPKIN_DEPENDENCIES.DAY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ZipkinDependencies.ZIPKIN_DEPENDENCIES.PARENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ZipkinDependencies.ZIPKIN_DEPENDENCIES.CHILD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return ZipkinDependencies.ZIPKIN_DEPENDENCIES.CALL_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value1() {
        return getDay();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getParent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getChild();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getCallCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ZipkinDependenciesRecord value1(Date value) {
        setDay(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ZipkinDependenciesRecord value2(String value) {
        setParent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ZipkinDependenciesRecord value3(String value) {
        setChild(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ZipkinDependenciesRecord value4(Long value) {
        setCallCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ZipkinDependenciesRecord values(Date value1, String value2, String value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ZipkinDependenciesRecord
     */
    public ZipkinDependenciesRecord() {
        super(ZipkinDependencies.ZIPKIN_DEPENDENCIES);
    }

    /**
     * Create a detached, initialised ZipkinDependenciesRecord
     */
    public ZipkinDependenciesRecord(Date day, String parent, String child, Long callCount) {
        super(ZipkinDependencies.ZIPKIN_DEPENDENCIES);

        set(0, day);
        set(1, parent);
        set(2, child);
        set(3, callCount);
    }
}
